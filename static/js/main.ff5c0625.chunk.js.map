{"version":3,"sources":["components/Users/Users.module.css","assets/images/user.jpg","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reduser.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reduser.js","App.js","serviceWorker.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","props","Music","Settings","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","DialogItem","path","d","Message","FormControl","input","meta","child","hasError","touched","error","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsPage","dialogsElements","map","key","messagesElements","m","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","alt","disabled","some","Users","Preloader","style","backgroundColor","preloader","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","bind","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","profile","descriptionBlock","large","posts","likesCount","profileReducer","newPost","newPostText","postId","Post","maxLength10","AddNewPostFormRedux","MyPosts","memo","postsElements","postsBlock","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","withRouter","Header","header","loginBlock","login","logout","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","Redirect","formData","initialized","appReducer","App","initializeApp","render","DialogsContainer","app","promise","Promise","all","Boolean","window","location","hostname","sidebarReducer","reducers","combineReducers","sidebar","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ff5c0625.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2LLRm\",\"selectedPage\":\"Users_selectedPage__3_0gK\"};","module.exports = __webpack_public_path__ + \"static/media/user.35c99376.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.4d08320c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1kisa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2IJ4G\",\"item\":\"Navbar_item__lm1mq\",\"activeLink\":\"Navbar_activeLink__mBGrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2OZ4t\",\"dialogsItems\":\"Dialogs_dialogsItems__2GOj4\",\"active\":\"Dialogs_active__F2e41\",\"messages\":\"Dialogs_messages__BLXj4\",\"message\":\"Dialogs_message__2de-R\"};","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active} `}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active} `}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kikita'},\r\n        {id: 2, name: 'Stas'},\r\n        {id: 3, name: 'Gena'},\r\n        {id: 4, name: 'Turbo'},\r\n        {id: 5, name: 'DushaMetelkin'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.d + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (<div className={s.message}>{props.message}</div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}"," export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n }\r\n\r\n export const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > 10 ) return `Max length is ${maxLength} symbols`;\r\n }","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addMewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.message}>\r\n                <div>{messagesElements}</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addMewMessage} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose (connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"48b0b2e2-e712-4519-b164-1ebd94cf1919\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    });\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(userId), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = (totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({\r\n                        [styles.selectedPage]: currentPage === p\r\n                    }, styles.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (<div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}\r\n                             alt=\"\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>\r\n                                Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                  followingInProgress={props.followingInProgress}\r\n                                  key={u.id}\r\n                                  follow={props.follow}\r\n                                  unfollow={props.unfollow}\r\n\r\n            />\r\n            )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\"\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n","import React from \"react\";\r\nimport {\r\n    follow, requestUsers, setCurrentPage,\r\n    toggleFollowingProgress, unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching, getPageSize, getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\nexport default compose(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)},\r\n        [props.status]\r\n    );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}\r\n                       onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        } );\r\n    }\r\n    deactivateEditMode() {\r\n        this.setState( {\r\n            editMode: false\r\n        } );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"-------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode.bind(this) } value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <img\r\n                src='https://sun2.48276.userapi.com/ZW1LARB0RnVkJBKzNnvNDpifTc1i6GH7p4eOUw/nS9wAdDm0ZQ.jpg'/>\r\n        </div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={props.profile.photos.large}  />\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}  />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 4},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 23},\r\n        {id: 3, message: 'Yo', likesCount: 0},\r\n        {id: 4, message: 'Yo', likesCount: 0},\r\n        {id: 5, message: 'Yo', likesCount: 0}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatus(status));\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://sun9-40.userapi.com/axvAEVRAAX3HFpfjziZyrN-tYMr9VGQDLfLJbA/KgZ-2P6ZbBc.jpg' />\r\n          {props.message}\r\n          <div>\r\n            <span>like</span> {props.likesCount}\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add posts</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText:state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport withRouter from \"react-router-dom/es/withRouter\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png'/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} {<button onClick={props.logout}>Log out</button>}</div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData(null, null, null, false));\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reduser\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(MapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reduser\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"}\r\n                       validate={[required]}\r\n                       name={\"email\"} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"}\r\n                       validate={[required]} type={\"password\"}\r\n                       name={\"password\"} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            {props.error && <div className={styles.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>)\r\n\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst MapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(MapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reduser\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n\r\n    Promise.all ([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n\r\n}\r\n\r\n\r\nexport default appReducer;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reduser\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/news'\n                           render={() => <News/>}/>\n                    <Route path='/music'\n                           render={() => <Music/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/settings'\n                           render={() => <Settings/>}/>\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reduser\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appReducer from \"./app-reduser\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root')\n)\n;\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2yG5I\",\"error\":\"FormsControls_error__2Nvha\",\"formSummaryError\":\"FormsControls_formSummaryError__1Rvpg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2nLhE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__4e_q0\",\"pageNumber\":\"Paginator_pageNumber__Qr28W\",\"selectedPage\":\"Paginator_selectedPage__2r5jP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__hquOd\",\"posts\":\"MyPosts_posts__oOVub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3DWj9\",\"loginBlock\":\"Header_loginBlock__10NRs\"};"],"sourceRoot":""}